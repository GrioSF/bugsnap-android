# Android CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-android/ for more details
#
version: 2
references:
  ## Workspaces
  workspace: &workspace
    ~/code

  ## Docker Image Configurations
  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx3G"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2G"'

  ## Cache Helpers
  gradle_key: &gradle_key
    jars-{{ checksum "build.gradle" }}-{{ checksum  "lib/build.gradle" }}-{{ checksum  "app/build.gradle" }}
  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key
  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle

  ## Dependencies
  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

jobs:
  # Run Tests
  test_project:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *android_dependencies
      - *save_gradle_cache
      - run:
          name: Run Lib Lint Tests
          command: ./gradlew lib:lint lib:test
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: lib/build/reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: lib/build/test-results
      - run:
          name: Run App Lint Tests
          command: ./gradlew app:lint app:test
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results

  build_project:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *android_dependencies
      - *save_gradle_cache
      - run:
          name: Build Library
          command: ./gradlew clean lib:assembleRelease --stacktrace
      - run:
          name: "Move Library Artifacts"
          command: |
            mkdir -p ./artifacts/lib/
            cp -R lib/build/outputs/aar/ ./artifacts/lib/
      - run:
          name: Build Application
          command: ./gradlew clean app:assembleRelease --stacktrace
      - run:
          name: "Move Application Artifacts"
          command: |
            mkdir -p ./artifacts/app/
            cp -R app/build/outputs/apk/release/ ./artifacts/app/
      - store_artifacts:
          path: ./artifacts/
      - persist_to_workspace:
          root: *workspace
          paths:
            - artifacts

  # Publishing to Github
  publish_tag_to_github:
    docker:
      - image: circleci/golang:1.8
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./artifacts/

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test_project:
          filters:
            tags:
              only: /^v.*/
      - build_project:
          requires:
            - test_project
          filters:
            tags:
              only: /^v.*/
      - publish_tag_to_github:
          requires:
            - test_project
            - build_project
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
